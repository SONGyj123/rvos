!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDR_MASK	include/def.h	15;"	d
ADDR_OFFSET	include/def.h	13;"	d
ASM_FILES	Makefile	/^ASM_FILES = $(wildcard $(SRC_DIR)\/*.S)$/;"	m
BAUD	include/uart.h	5;"	d
BLK_SIZE	backup/fs.h	4;"	d
BLK_SIZE	src/fs.h	4;"	d
BSIZE	backup/virt_disk.h	4;"	d
BSIZE	mkfs/mkfs.c	16;"	d	file:
BSIZE	src/virt_disk.h	4;"	d
BUILD_DIR	Makefile	/^BUILD_DIR = $(BUILD_ROOT)\/benos$/;"	m
BUILD_LIB_DIR	Makefile	/^BUILD_LIB_DIR = $(BUILD_ROOT)\/lib$/;"	m
BUILD_ROOT	Makefile	/^BUILD_ROOT= build$/;"	m
CLINT	include/timer.h	6;"	d
CLINT_MTIME	include/timer.h	7;"	d
CLINT_TIMECMP	include/timer.h	8;"	d
CMD_PREFIX	Makefile	/^	CMD_PREFIX := $(CMD_PREFIX_DEFAULT)$/;"	m
CMD_PREFIX	Makefile	/^	CMD_PREFIX :=$/;"	m
CMD_PREFIX_DEFAULT	Makefile	/^CMD_PREFIX_DEFAULT := @$/;"	m
CPUS	Makefile	/^CPUS = 1$/;"	m
C_FILES	Makefile	/^C_FILES = $(wildcard $(SRC_DIR)\/*.c)$/;"	m
DDR_END	include/riscv.h	20;"	d
DDR_START	include/riscv.h	19;"	d
DEP_FILES	Makefile	/^DEP_FILES = $(OBJ_FILES:%.o=%.d)$/;"	m
DLL	include/uart.h	9;"	d
DLM	include/uart.h	11;"	d
FCR	include/uart.h	12;"	d
FD_DEVICE	src/fd.h	/^	enum {FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE} type;$/;"	e	enum:file::__anon3
FD_INODE	src/fd.h	/^	enum {FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE} type;$/;"	e	enum:file::__anon3
FD_NONE	src/fd.h	/^	enum {FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE} type;$/;"	e	enum:file::__anon3
FD_PIPE	src/fd.h	/^	enum {FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE} type;$/;"	e	enum:file::__anon3
FSSIZE	mkfs/mkfs.c	15;"	d	file:
FW_JUMP_ADDR	sbi/sbi_main.c	6;"	d	file:
GET_ADDR_OFFSET	include/def.h	18;"	d
GET_PAGETABLE	include/def.h	17;"	d
GET_PPN	include/def.h	16;"	d
GNU	Makefile	/^GNU ?= riscv64-unknown-elf$/;"	m
IBLOCK	mkfs/mkfs.c	18;"	d	file:
IER	include/uart.h	10;"	d
IER_RX_ENABLE	include/uart.h	21;"	d
IER_TX_ENABLE	include/uart.h	22;"	d
INODES_PER_BLK	backup/fs.h	31;"	d
INODES_PER_BLK	src/fs.h	89;"	d
INODE_PER_BLOCK	mkfs/mkfs.c	17;"	d	file:
INSERT_FIELD	include/riscv.h	7;"	d
INTERVAL	include/timer.h	10;"	d
ISR	include/uart.h	13;"	d
LCR	include/uart.h	14;"	d
LIB_DIR	Makefile	/^LIB_DIR = lib$/;"	m
LIB_FILES	Makefile	/^LIB_FILES = $(wildcard $(LIB_DIR)\/*.c)$/;"	m
LSR	include/uart.h	16;"	d
LSR_TX_IDLE	include/uart.h	20;"	d
MAKE_SATP	include/def.h	21;"	d
MASK	include/def.h	14;"	d
MAXVA	include/riscv.h	25;"	d
MAX_FILE	src/fd.h	4;"	d
MAX_FILE	src/fs.h	90;"	d
MAX_OFILE	src/proc.h	15;"	d
MAX_ORDER	src/buddy.h	4;"	d
MAX_PROC	include/def.h	24;"	d
MCR	include/uart.h	15;"	d
MIE_MTIE	include/timer.h	12;"	d
MIE_SSIE	include/timer.h	13;"	d
MSR	include/uart.h	17;"	d
MSTATUS_MPIE	include/riscv.h	16;"	d
MSTATUS_MPP	include/riscv.h	15;"	d
MSTATUS_MPP_SHIFT	include/riscv.h	14;"	d
MSTATUS_SIE	include/riscv.h	17;"	d
NDIRECT	backup/fs.h	5;"	d
NDIRECT	src/fs.h	5;"	d
NINDRIRECT	backup/fs.h	6;"	d
NINDRIRECT	src/fs.h	6;"	d
NUM	backup/virt_disk.h	7;"	d
NUM	src/virt_disk.h	7;"	d
OBJ_FILES	Makefile	/^OBJ_FILES = $(C_FILES:$(SRC_DIR)\/%.c=$(BUILD_DIR)\/%_c.o)$/;"	m
PAGE_SIZE	include/def.h	4;"	d
PIPESIZE	src/pipe.h	10;"	d
PLIC	backup/plic.h	7;"	d
PLIC	src/plic.h	7;"	d
PLIC_INT	src/src_trap.h	7;"	d
PLIC_MCLAIM	backup/plic.h	14;"	d
PLIC_MCLAIM	src/plic.h	14;"	d
PLIC_MENABLE	backup/plic.h	10;"	d
PLIC_MENABLE	src/plic.h	10;"	d
PLIC_MPRIORITY	backup/plic.h	12;"	d
PLIC_MPRIORITY	src/plic.h	12;"	d
PLIC_PENDING	backup/plic.h	9;"	d
PLIC_PENDING	src/plic.h	9;"	d
PLIC_PRIORITY	backup/plic.h	8;"	d
PLIC_PRIORITY	src/plic.h	8;"	d
PLIC_SCLAIM	backup/plic.h	15;"	d
PLIC_SCLAIM	src/plic.h	15;"	d
PLIC_SENABLE	backup/plic.h	11;"	d
PLIC_SENABLE	src/plic.h	11;"	d
PLIC_SPRIORITY	backup/plic.h	13;"	d
PLIC_SPRIORITY	src/plic.h	13;"	d
PRV_M	include/riscv.h	12;"	d
PRV_S	include/riscv.h	11;"	d
PRV_U	include/riscv.h	10;"	d
PTE_R	include/def.h	7;"	d
PTE_U	include/def.h	10;"	d
PTE_V	include/def.h	6;"	d
PTE_W	include/def.h	8;"	d
PTE_X	include/def.h	9;"	d
PT_A0	include/asm/asm-offsets.h	24;"	d
PT_A0	sbi/sbi_trap_context_struct.h	22;"	d
PT_A1	include/asm/asm-offsets.h	25;"	d
PT_A1	sbi/sbi_trap_context_struct.h	23;"	d
PT_A2	include/asm/asm-offsets.h	26;"	d
PT_A2	sbi/sbi_trap_context_struct.h	24;"	d
PT_A3	include/asm/asm-offsets.h	27;"	d
PT_A3	sbi/sbi_trap_context_struct.h	25;"	d
PT_A4	include/asm/asm-offsets.h	28;"	d
PT_A4	sbi/sbi_trap_context_struct.h	26;"	d
PT_A5	include/asm/asm-offsets.h	29;"	d
PT_A5	sbi/sbi_trap_context_struct.h	27;"	d
PT_A6	include/asm/asm-offsets.h	30;"	d
PT_A6	sbi/sbi_trap_context_struct.h	28;"	d
PT_A7	include/asm/asm-offsets.h	31;"	d
PT_A7	sbi/sbi_trap_context_struct.h	29;"	d
PT_FP	include/asm/asm-offsets.h	9;"	d
PT_FP	sbi/sbi_trap_context_struct.h	7;"	d
PT_GP	include/asm/asm-offsets.h	39;"	d
PT_GP	sbi/sbi_trap_context_struct.h	37;"	d
PT_MEPC	sbi/sbi_trap_context_struct.h	5;"	d
PT_MSTATUS	sbi/sbi_trap_context_struct.h	38;"	d
PT_ORIG_A0	include/asm/asm-offsets.h	40;"	d
PT_RA	include/asm/asm-offsets.h	8;"	d
PT_RA	sbi/sbi_trap_context_struct.h	6;"	d
PT_S0	include/asm/asm-offsets.h	10;"	d
PT_S0	sbi/sbi_trap_context_struct.h	8;"	d
PT_S1	include/asm/asm-offsets.h	11;"	d
PT_S1	sbi/sbi_trap_context_struct.h	9;"	d
PT_S10	include/asm/asm-offsets.h	20;"	d
PT_S10	sbi/sbi_trap_context_struct.h	18;"	d
PT_S11	include/asm/asm-offsets.h	21;"	d
PT_S11	sbi/sbi_trap_context_struct.h	19;"	d
PT_S2	include/asm/asm-offsets.h	12;"	d
PT_S2	sbi/sbi_trap_context_struct.h	10;"	d
PT_S3	include/asm/asm-offsets.h	13;"	d
PT_S3	sbi/sbi_trap_context_struct.h	11;"	d
PT_S4	include/asm/asm-offsets.h	14;"	d
PT_S4	sbi/sbi_trap_context_struct.h	12;"	d
PT_S5	include/asm/asm-offsets.h	15;"	d
PT_S5	sbi/sbi_trap_context_struct.h	13;"	d
PT_S6	include/asm/asm-offsets.h	16;"	d
PT_S6	sbi/sbi_trap_context_struct.h	14;"	d
PT_S7	include/asm/asm-offsets.h	17;"	d
PT_S7	sbi/sbi_trap_context_struct.h	15;"	d
PT_S8	include/asm/asm-offsets.h	18;"	d
PT_S8	sbi/sbi_trap_context_struct.h	16;"	d
PT_S9	include/asm/asm-offsets.h	19;"	d
PT_S9	sbi/sbi_trap_context_struct.h	17;"	d
PT_SBADADDR	include/asm/asm-offsets.h	42;"	d
PT_SCAUSE	include/asm/asm-offsets.h	43;"	d
PT_SEPC	include/asm/asm-offsets.h	7;"	d
PT_SIZE	include/asm/asm-offsets.h	6;"	d
PT_SIZE	sbi/sbi_trap_context_struct.h	4;"	d
PT_SP	include/asm/asm-offsets.h	22;"	d
PT_SP	sbi/sbi_trap_context_struct.h	20;"	d
PT_SSTATUS	include/asm/asm-offsets.h	41;"	d
PT_T0	include/asm/asm-offsets.h	32;"	d
PT_T0	sbi/sbi_trap_context_struct.h	30;"	d
PT_T1	include/asm/asm-offsets.h	33;"	d
PT_T1	sbi/sbi_trap_context_struct.h	31;"	d
PT_T2	include/asm/asm-offsets.h	34;"	d
PT_T2	sbi/sbi_trap_context_struct.h	32;"	d
PT_T3	include/asm/asm-offsets.h	35;"	d
PT_T3	sbi/sbi_trap_context_struct.h	33;"	d
PT_T4	include/asm/asm-offsets.h	36;"	d
PT_T4	sbi/sbi_trap_context_struct.h	34;"	d
PT_T5	include/asm/asm-offsets.h	37;"	d
PT_T5	sbi/sbi_trap_context_struct.h	35;"	d
PT_T6	include/asm/asm-offsets.h	38;"	d
PT_T6	sbi/sbi_trap_context_struct.h	36;"	d
PT_TP	include/asm/asm-offsets.h	23;"	d
PT_TP	sbi/sbi_trap_context_struct.h	21;"	d
QEMU_BIOS	Makefile	/^QEMU_BIOS = -bios mysbi.bin  -device loader,file=benos.bin,addr=0x80200000$/;"	m
QEMU_OPTS	Makefile	/^QEMU_OPTS = -global virtio-mmio.force-legacy=false$/;"	m
R	src/virt_disk.c	5;"	d	file:
RHR	include/uart.h	7;"	d
ROUND_4K	src/buddy.h	5;"	d
RUNNABLE	src/proc.h	10;"	d
RUNNING	src/proc.h	11;"	d
R_VIRTIO_REG	backup/virt_disk.h	48;"	d
R_VIRTIO_REG	src/virt_disk.h	48;"	d
SATP_SV39	include/def.h	20;"	d
SBI_ASM_FILES	Makefile	/^SBI_ASM_FILES = $(wildcard $(SBI_SRC_DIR)\/*.S)$/;"	m
SBI_BUILD_DIR	Makefile	/^SBI_BUILD_DIR = $(BUILD_ROOT)\/sbi$/;"	m
SBI_CALL	include/riscv.h	259;"	d
SBI_C_FILES	Makefile	/^SBI_C_FILES = $(wildcard $(SBI_SRC_DIR)\/*.c)$/;"	m
SBI_OBJ_FILES	Makefile	/^SBI_OBJ_FILES = $(SBI_C_FILES:$(SBI_SRC_DIR)\/%.c=$(SBI_BUILD_DIR)\/%_c.o)$/;"	m
SBI_SRC_DIR	Makefile	/^SBI_SRC_DIR = sbi$/;"	m
SLEEPING	src/proc.h	12;"	d
SPR	include/uart.h	18;"	d
SRC_DIR	Makefile	/^SRC_DIR = src$/;"	m
SSTATUS_SIE	include/riscv.h	248;"	d
SSTATUS_SPIE	include/riscv.h	23;"	d
SSTATUS_SPP	include/riscv.h	22;"	d
SYS_CALL	sbi/sbi_trap.c	6;"	d	file:
SYS_CALL_RD_HARID	sbi/sbi_trap.c	9;"	d	file:
SYS_CALL_UART_SEND_CHAR	sbi/sbi_trap.c	7;"	d	file:
SYS_CALL_UART_SEND_STRING	sbi/sbi_trap.c	8;"	d	file:
SYS_fork	src/syscall.h	4;"	d
SYS_open	src/syscall.h	9;"	d
SYS_pipe	src/syscall.h	6;"	d
SYS_print	src/syscall.h	10;"	d
SYS_read	src/syscall.h	7;"	d
SYS_sleep	src/syscall.h	5;"	d
SYS_write	src/syscall.h	8;"	d
State	src/buddy.h	/^enum State$/;"	g
THR	include/uart.h	8;"	d
TIMER_INT	sbi/sbi_trap.c	11;"	d	file:
TIMER_INT	src/src_trap.h	6;"	d
TO_KERNEL	src/fs.h	11;"	d
TO_USER	src/fs.h	12;"	d
TRAMPOLINE	include/riscv.h	26;"	d
TYPE_DIR	mkfs/mkfs.c	12;"	d	file:
TYPE_DIR	src/fs.h	8;"	d
TYPE_FILE	mkfs/mkfs.c	13;"	d	file:
TYPE_FILE	src/fs.h	9;"	d
UART0	include/uart.h	4;"	d
UART0_IRQ	backup/plic.h	4;"	d
UART0_IRQ	src/plic.h	4;"	d
UNUSED	src/proc.h	8;"	d
USED	src/proc.h	9;"	d
USER_DIR	Makefile	/^USER_DIR = user$/;"	m
VIRTIO0_IRQ	backup/plic.h	5;"	d
VIRTIO0_IRQ	src/plic.h	5;"	d
VIRTIO_BLK_F_CONFIG_WCE	backup/virt_disk.h	39;"	d
VIRTIO_BLK_F_CONFIG_WCE	src/virt_disk.h	39;"	d
VIRTIO_BLK_F_MQ	backup/virt_disk.h	40;"	d
VIRTIO_BLK_F_MQ	src/virt_disk.h	40;"	d
VIRTIO_BLK_F_RO	backup/virt_disk.h	37;"	d
VIRTIO_BLK_F_RO	src/virt_disk.h	37;"	d
VIRTIO_BLK_F_SCSI	backup/virt_disk.h	38;"	d
VIRTIO_BLK_F_SCSI	src/virt_disk.h	38;"	d
VIRTIO_BLK_T_IN	backup/virt_disk.h	45;"	d
VIRTIO_BLK_T_IN	src/virt_disk.h	45;"	d
VIRTIO_BLK_T_OUT	backup/virt_disk.h	46;"	d
VIRTIO_BLK_T_OUT	src/virt_disk.h	46;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	backup/virt_disk.h	31;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	src/virt_disk.h	31;"	d
VIRTIO_CONFIG_S_DRIVER	backup/virt_disk.h	32;"	d
VIRTIO_CONFIG_S_DRIVER	src/virt_disk.h	32;"	d
VIRTIO_CONFIG_S_DRIVER_OK	backup/virt_disk.h	33;"	d
VIRTIO_CONFIG_S_DRIVER_OK	src/virt_disk.h	33;"	d
VIRTIO_CONFIG_S_FEATURES_OK	backup/virt_disk.h	34;"	d
VIRTIO_CONFIG_S_FEATURES_OK	src/virt_disk.h	34;"	d
VIRTIO_F_ANY_LAYOUT	backup/virt_disk.h	41;"	d
VIRTIO_F_ANY_LAYOUT	src/virt_disk.h	41;"	d
VIRTIO_MMIO_DEVICE_DESC_HIGH	backup/virt_disk.h	28;"	d
VIRTIO_MMIO_DEVICE_DESC_HIGH	src/virt_disk.h	28;"	d
VIRTIO_MMIO_DEVICE_DESC_LOW	backup/virt_disk.h	27;"	d
VIRTIO_MMIO_DEVICE_DESC_LOW	src/virt_disk.h	27;"	d
VIRTIO_MMIO_DEVICE_FEATURES	backup/virt_disk.h	13;"	d
VIRTIO_MMIO_DEVICE_FEATURES	src/virt_disk.h	13;"	d
VIRTIO_MMIO_DEVICE_ID	backup/virt_disk.h	11;"	d
VIRTIO_MMIO_DEVICE_ID	src/virt_disk.h	11;"	d
VIRTIO_MMIO_DRIVER_DESC_HIGH	backup/virt_disk.h	26;"	d
VIRTIO_MMIO_DRIVER_DESC_HIGH	src/virt_disk.h	26;"	d
VIRTIO_MMIO_DRIVER_DESC_LOW	backup/virt_disk.h	25;"	d
VIRTIO_MMIO_DRIVER_DESC_LOW	src/virt_disk.h	25;"	d
VIRTIO_MMIO_DRIVER_FEATURES	backup/virt_disk.h	14;"	d
VIRTIO_MMIO_DRIVER_FEATURES	src/virt_disk.h	14;"	d
VIRTIO_MMIO_INTERRUPT_ACK	backup/virt_disk.h	21;"	d
VIRTIO_MMIO_INTERRUPT_ACK	src/virt_disk.h	21;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	backup/virt_disk.h	20;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	src/virt_disk.h	20;"	d
VIRTIO_MMIO_MAGIC_VALUE	backup/virt_disk.h	9;"	d
VIRTIO_MMIO_MAGIC_VALUE	src/virt_disk.h	9;"	d
VIRTIO_MMIO_QUEUE_DESC_HIGH	backup/virt_disk.h	24;"	d
VIRTIO_MMIO_QUEUE_DESC_HIGH	src/virt_disk.h	24;"	d
VIRTIO_MMIO_QUEUE_DESC_LOW	backup/virt_disk.h	23;"	d
VIRTIO_MMIO_QUEUE_DESC_LOW	src/virt_disk.h	23;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	backup/virt_disk.h	19;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	src/virt_disk.h	19;"	d
VIRTIO_MMIO_QUEUE_NUM	backup/virt_disk.h	17;"	d
VIRTIO_MMIO_QUEUE_NUM	src/virt_disk.h	17;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	backup/virt_disk.h	16;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	src/virt_disk.h	16;"	d
VIRTIO_MMIO_QUEUE_READY	backup/virt_disk.h	18;"	d
VIRTIO_MMIO_QUEUE_READY	src/virt_disk.h	18;"	d
VIRTIO_MMIO_QUEUE_SEL	backup/virt_disk.h	15;"	d
VIRTIO_MMIO_QUEUE_SEL	src/virt_disk.h	15;"	d
VIRTIO_MMIO_STATUS	backup/virt_disk.h	22;"	d
VIRTIO_MMIO_STATUS	src/virt_disk.h	22;"	d
VIRTIO_MMIO_VENDOR_ID	backup/virt_disk.h	12;"	d
VIRTIO_MMIO_VENDOR_ID	src/virt_disk.h	12;"	d
VIRTIO_MMIO_VERSION	backup/virt_disk.h	10;"	d
VIRTIO_MMIO_VERSION	src/virt_disk.h	10;"	d
VIRTIO_RING_F_EVENT_IDX	backup/virt_disk.h	43;"	d
VIRTIO_RING_F_EVENT_IDX	src/virt_disk.h	43;"	d
VIRTIO_RING_F_INDIRECT_DESC	backup/virt_disk.h	42;"	d
VIRTIO_RING_F_INDIRECT_DESC	src/virt_disk.h	42;"	d
VIRT_IO_BASE	backup/virt_disk.h	6;"	d
VIRT_IO_BASE	src/virt_disk.h	6;"	d
VRING_DESC_F_NEXT	backup/virt_disk.h	59;"	d
VRING_DESC_F_NEXT	src/virt_disk.h	59;"	d
VRING_DESC_F_WRITE	backup/virt_disk.h	60;"	d
VRING_DESC_F_WRITE	src/virt_disk.h	60;"	d
W_VIRTIO_REG	backup/virt_disk.h	49;"	d
W_VIRTIO_REG	src/virt_disk.h	49;"	d
ZOMBIE	src/proc.h	13;"	d
_FREE	src/buddy.h	/^	_FREE$/;"	e	enum:State
_SPLIT	src/buddy.h	/^	_SPLIT,$/;"	e	enum:State
_USED	src/buddy.h	/^	_USED,$/;"	e	enum:State
__ASM_OFFSETS_H__	include/asm/asm-offsets.h	2;"	d
__BUDDY_H	src/buddy.h	2;"	d
__CONTEXT_STR_H	sbi/sbi_trap_context_struct.h	2;"	d
__DEF_H	include/def.h	2;"	d
__FILE_DESCRIPTOR_H	src/fd.h	2;"	d
__FS_H	backup/fs.h	2;"	d
__FS_H	src/fs.h	2;"	d
__LOCKS_H	src/locks.h	2;"	d
__PIPE_H	src/pipe.h	2;"	d
__PLIC_H	backup/plic.h	2;"	d
__PLIC_H	src/plic.h	2;"	d
__PROC_H	src/proc.h	2;"	d
__RISCV_H	include/riscv.h	2;"	d
__SBI_TRAP_H	sbi/sbi_trap.h	2;"	d
__SBI_TRAP_REG_H	sbi/sbi_trap_reg.h	2;"	d
__SRC_TRAP_H	src/src_trap.h	2;"	d
__SYSCALL_H	src/syscall.h	2;"	d
__TIMER_H	include/timer.h	2;"	d
__UART_H	include/uart.h	2;"	d
__VIRT_DISK	backup/virt_disk.h	2;"	d
__VIRT_DISK	src/virt_disk.h	2;"	d
_start	build/benos/kernel_boot_s.s	/^_start:$/;"	l
_start	build/sbi/sbi_boot_s.s	/^_start:$/;"	l
_start	sbi/sbi_boot.S	/^_start:$/;"	l
_start	src/kernel_boot.S	/^_start:$/;"	l
_start	user/sleep_test.S	/^_start:$/;"	l
_start	user/sleep_test.s	/^_start:$/;"	l
a0	include/asm/ptregs.h	/^	unsigned long a0;$/;"	m	struct:pt_regs
a0	sbi/sbi_trap_reg.h	/^	unsigned long a0;$/;"	m	struct:sbi_context_str
a0	src/proc.h	/^  \/* 112 *\/ unsigned long a0;$/;"	m	struct:trapframe
a1	include/asm/ptregs.h	/^	unsigned long a1;$/;"	m	struct:pt_regs
a1	sbi/sbi_trap_reg.h	/^	unsigned long a1;$/;"	m	struct:sbi_context_str
a1	src/proc.h	/^  \/* 120 *\/ unsigned long a1;$/;"	m	struct:trapframe
a2	include/asm/ptregs.h	/^	unsigned long a2;$/;"	m	struct:pt_regs
a2	sbi/sbi_trap_reg.h	/^	unsigned long a2;$/;"	m	struct:sbi_context_str
a2	src/proc.h	/^  \/* 128 *\/ unsigned long a2;$/;"	m	struct:trapframe
a3	include/asm/ptregs.h	/^	unsigned long a3;$/;"	m	struct:pt_regs
a3	sbi/sbi_trap_reg.h	/^	unsigned long a3;$/;"	m	struct:sbi_context_str
a3	src/proc.h	/^  \/* 136 *\/ unsigned long a3;$/;"	m	struct:trapframe
a4	include/asm/ptregs.h	/^	unsigned long a4;$/;"	m	struct:pt_regs
a4	sbi/sbi_trap_reg.h	/^	unsigned long a4;$/;"	m	struct:sbi_context_str
a4	src/proc.h	/^  \/* 144 *\/ unsigned long a4;$/;"	m	struct:trapframe
a5	include/asm/ptregs.h	/^	unsigned long a5;$/;"	m	struct:pt_regs
a5	sbi/sbi_trap_reg.h	/^	unsigned long a5;$/;"	m	struct:sbi_context_str
a5	src/proc.h	/^  \/* 152 *\/ unsigned long a5;$/;"	m	struct:trapframe
a6	include/asm/ptregs.h	/^	unsigned long a6;$/;"	m	struct:pt_regs
a6	sbi/sbi_trap_reg.h	/^	unsigned long a6;$/;"	m	struct:sbi_context_str
a6	src/proc.h	/^  \/* 160 *\/ unsigned long a6;$/;"	m	struct:trapframe
a7	include/asm/ptregs.h	/^	unsigned long a7;$/;"	m	struct:pt_regs
a7	sbi/sbi_trap_reg.h	/^	unsigned long a7;$/;"	m	struct:sbi_context_str
a7	src/proc.h	/^  \/* 168 *\/ unsigned long a7;$/;"	m	struct:trapframe
acquire	build/benos/locks_c.s	/^acquire:$/;"	l
acquire	src/locks.c	/^void acquire(struct spinlock *lk)$/;"	f
addr	backup/virt_disk.h	/^  unsigned long addr;$/;"	m	struct:virtq_desc
addr	src/virt_disk.h	/^  unsigned long addr;$/;"	m	struct:virtq_desc
align	src/fs.h	/^	unsigned long align;$/;"	m	struct:proghdr
alloc3_desc	backup/virt_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc3_desc	build/benos/virt_disk_c.s	/^alloc3_desc:$/;"	l
alloc3_desc	src/virt_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc_desc	backup/virt_disk.c	/^static int alloc_desc()$/;"	f	file:
alloc_desc	build/benos/virt_disk_c.s	/^alloc_desc:$/;"	l
alloc_desc	src/virt_disk.c	/^alloc_desc()$/;"	f	file:
avail	backup/virt_disk.c	/^  struct virtq_avail *avail;$/;"	m	struct:disk	typeref:struct:disk::virtq_avail	file:
avail	src/virt_disk.c	/^  struct virtq_avail *avail;$/;"	m	struct:disk	typeref:struct:disk::virtq_avail	file:
b	backup/virt_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon1	typeref:struct:disk::__anon1::buf	file:
b	src/virt_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon2	typeref:struct:disk::__anon2::buf	file:
back_to_kernel	build/benos/src_trap_c.s	/^back_to_kernel:$/;"	l
back_to_kernel	src/src_trap.c	/^void back_to_kernel()$/;"	f
back_trace	build/benos/back_trace_c.s	/^back_trace:$/;"	l
back_trace	src/back_trace.c	/^void back_trace()$/;"	f
blknum_to_addr	build/benos/fs_c.s	/^blknum_to_addr:$/;"	l
blknum_to_addr	src/fs.c	/^unsigned int blknum_to_addr(struct inode *ip, unsigned int blknum)$/;"	f
blockno	backup/virt_disk.h	/^	unsigned int blockno;$/;"	m	struct:buf
blockno	src/virt_disk.h	/^	unsigned int blockno;$/;"	m	struct:buf
buddy_blk	src/buddy.h	/^struct buddy_blk{$/;"	s
buf	backup/virt_disk.h	/^struct buf$/;"	s
buf	src/virt_disk.h	/^struct buf$/;"	s
content	backup/fs.h	/^	struct dinode content;	\/\/copy of dinode$/;"	m	struct:inode	typeref:struct:inode::dinode
content	src/fs.h	/^	struct dinode content;	\/\/copy of dinode$/;"	m	struct:inode	typeref:struct:inode::dinode
context	src/proc.h	/^	struct context context;$/;"	m	struct:proc	typeref:struct:proc::context
context	src/proc.h	/^struct context$/;"	s
copy_from_user	build/benos/vm_c.s	/^copy_from_user:$/;"	l
copy_from_user	src/vm.c	/^int copy_from_user(pgt_t user_pgt, void *dst, const void *src, unsigned long len)$/;"	f
copy_to_user	build/benos/vm_c.s	/^copy_to_user:$/;"	l
copy_to_user	src/vm.c	/^int copy_to_user(pgt_t user_pgt, void *dst, const void *src, unsigned long len)$/;"	f
create_bin_tree	build/benos/buddy_c.s	/^create_bin_tree:$/;"	l
create_bin_tree	src/buddy.c	/^static struct buddy_blk *create_bin_tree(int depth)$/;"	f	file:
data	backup/virt_disk.h	/^	unsigned char data[BSIZE];$/;"	m	struct:buf
data	src/pipe.h	/^	char data[PIPESIZE];$/;"	m	struct:pipe
data	src/virt_disk.h	/^	unsigned char data[BSIZE];$/;"	m	struct:buf
data_address	backup/fs.h	/^	unsigned int data_address[NDIRECT+1];	\/\/data block address 12direct + 1indirect$/;"	m	struct:dinode
data_address	src/fs.h	/^	unsigned int data_address[NDIRECT+1];	\/\/data block address 12direct + 1indirect$/;"	m	struct:dinode
data_blk_num	src/fs.h	/^	unsigned int data_blk_num;$/;"	m	struct:superblock
delay	user/first_test.c	/^void delay(int val)$/;"	f
delay	user/first_test.s	/^delay:$/;"	l
desc	backup/virt_disk.c	/^  struct virtq_desc *desc;$/;"	m	struct:disk	typeref:struct:disk::virtq_desc	file:
desc	src/virt_disk.c	/^  struct virtq_desc *desc;$/;"	m	struct:disk	typeref:struct:disk::virtq_desc	file:
dev	backup/virt_disk.h	/^	unsigned int dev;$/;"	m	struct:buf
dev	src/virt_disk.h	/^	unsigned int dev;$/;"	m	struct:buf
digit	build/benos/printf_c.s	/^digit:$/;"	l
digit	src/printf.c	/^char *digit = "0123456789abcdef";$/;"	v
dinode	backup/fs.h	/^struct dinode$/;"	s
dinode	src/fs.h	/^struct dinode$/;"	s
dirent	src/fs.h	/^struct dirent$/;"	s
disk	backup/virt_disk.c	/^static struct disk {$/;"	s	file:
disk	backup/virt_disk.c	/^} disk;$/;"	v	typeref:struct:disk	file:
disk	backup/virt_disk.h	/^	int disk;$/;"	m	struct:buf
disk	src/virt_disk.c	/^static struct disk$/;"	s	file:
disk	src/virt_disk.c	/^} disk;$/;"	v	typeref:struct:disk	file:
disk	src/virt_disk.h	/^	int disk;$/;"	m	struct:buf
ehsize	src/fs.h	/^	unsigned short ehsize;$/;"	m	struct:elfhdr
elf	src/fs.h	/^	unsigned char elf[12];$/;"	m	struct:elfhdr
elfhdr	src/fs.h	/^struct elfhdr$/;"	s
entry	src/fs.h	/^	unsigned long entry;$/;"	m	struct:elfhdr
entry	user/usys.pl	/^sub entry {$/;"	s
epc	src/proc.h	/^  \/*  24 *\/ unsigned long epc;           \/\/ saved user program counter$/;"	m	struct:trapframe
exec	build/benos/exec_c.s	/^exec:$/;"	l
exec	src/exec.c	/^int exec(char *path, char **argv)$/;"	f
exit	build/benos/proc_c.s	/^exit:$/;"	l
exit	src/proc.c	/^void exit(int code)$/;"	f
f_img	mkfs/mkfs.c	/^int f_img;$/;"	v
fault	build/benos/src_trap_entry_s.s	/^fault:$/;"	l
fault	src/src_trap_entry.S	/^fault:$/;"	l
fault_handler	src/src_trap.c	/^	void (*fault_handler)(struct pt_regs *, unsigned long);$/;"	m	struct:fault_info	file:
fault_info	build/benos/src_trap_c.s	/^fault_info:$/;"	l
fault_info	src/src_trap.c	/^static const struct fault_info fault_info[] = {$/;"	v	typeref:struct:fault_info	file:
fault_info	src/src_trap.c	/^struct fault_info {$/;"	s	file:
fault_name	src/src_trap.c	/^	char *fault_name;$/;"	m	struct:fault_info	file:
fd_alloc	build/benos/fd_c.s	/^fd_alloc:$/;"	l
fd_alloc	src/fd.c	/^int fd_alloc(struct file *file_t_addr)$/;"	f
file	src/fd.h	/^struct file$/;"	s
file_alloc	build/benos/fd_c.s	/^file_alloc:$/;"	l
file_alloc	src/fd.c	/^struct file *file_alloc()$/;"	f
file_close	build/benos/fd_c.s	/^file_close:$/;"	l
file_close	src/fd.c	/^void file_close(struct file *file)$/;"	f
file_dup	build/benos/fd_c.s	/^file_dup:$/;"	l
file_dup	src/fd.c	/^struct file *file_dup(struct file *file)$/;"	f
filesz	src/fs.h	/^	unsigned long filesz;$/;"	m	struct:proghdr
flag	src/fs.h	/^	unsigned int flag;$/;"	m	struct:elfhdr
flags	backup/virt_disk.h	/^  unsigned short flags;     \/\/ always zero$/;"	m	struct:virtq_avail
flags	backup/virt_disk.h	/^  unsigned short flags; \/\/ always zero$/;"	m	struct:virtq_used
flags	backup/virt_disk.h	/^  unsigned short flags;$/;"	m	struct:virtq_desc
flags	src/fs.h	/^	unsigned int flags;$/;"	m	struct:proghdr
flags	src/virt_disk.h	/^  unsigned short flags;     \/\/ always zero$/;"	m	struct:virtq_avail
flags	src/virt_disk.h	/^  unsigned short flags; \/\/ always zero$/;"	m	struct:virtq_used
flags	src/virt_disk.h	/^  unsigned short flags;$/;"	m	struct:virtq_desc
fork	build/benos/proc_c.s	/^fork:$/;"	l
fork	src/proc.c	/^int fork()$/;"	f
fork	user/usys.S	/^fork:$/;"	l
fork	user/usys.s	/^fork:$/;"	l
fork_ret	build/benos/proc_c.s	/^fork_ret:$/;"	l
fork_ret	src/proc.c	/^void fork_ret()$/;"	f
free	backup/virt_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free	src/virt_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free_chain	backup/virt_disk.c	/^free_chain(int i)$/;"	f	file:
free_chain	build/benos/virt_disk_c.s	/^free_chain:$/;"	l
free_chain	src/virt_disk.c	/^free_chain(int i)$/;"	f	file:
free_desc	backup/virt_disk.c	/^free_desc(int i)$/;"	f	file:
free_desc	build/benos/virt_disk_c.s	/^free_desc:$/;"	l
free_desc	src/virt_disk.c	/^free_desc(int i)$/;"	f	file:
free_mem_in_page	build/benos/vm_c.s	/^free_mem_in_page:$/;"	l
free_mem_in_page	src/vm.c	/^int free_mem_in_page(void *pa_s, void *pa_e)$/;"	f
freeblock	mkfs/mkfs.c	/^unsigned int freeblock = 4;$/;"	v
freeinode	mkfs/mkfs.c	/^unsigned int freeinode = 0;$/;"	v
fs_init	build/benos/fs_c.s	/^fs_init:$/;"	l
fs_init	src/fs.c	/^void fs_init()$/;"	f
ftable	src/fd.c	/^struct file ftable[MAX_FILE];$/;"	v	typeref:struct:file
get_inode	build/benos/fs_c.s	/^get_inode:$/;"	l
get_inode	src/fs.c	/^int get_inode(char *path, struct inode *ino)$/;"	f
get_nxt_name	build/benos/fs_c.s	/^get_nxt_name:$/;"	l
get_nxt_name	src/fs.c	/^char *get_nxt_name(char *path, char *name)$/;"	f
gp	include/asm/ptregs.h	/^	unsigned long gp;$/;"	m	struct:pt_regs
gp	sbi/sbi_trap_reg.h	/^	unsigned long gp;$/;"	m	struct:sbi_context_str
gp	src/proc.h	/^  \/*  56 *\/ unsigned long gp;$/;"	m	struct:trapframe
ialloc	mkfs/mkfs.c	/^unsigned int ialloc(unsigned short type)$/;"	f
iappend	mkfs/mkfs.c	/^void iappend(unsigned int inum, void *xp, int n)$/;"	f
id	backup/virt_disk.h	/^  unsigned int id; \/\/ index of start of completed descriptor chain$/;"	m	struct:virtq_used_elem
id	src/virt_disk.h	/^  unsigned int id; \/\/ index of start of completed descriptor chain$/;"	m	struct:virtq_used_elem
idx	backup/virt_disk.h	/^  unsigned short idx;       \/\/ driver will write ring[idx] next$/;"	m	struct:virtq_avail
idx	backup/virt_disk.h	/^  unsigned short idx;   \/\/ device increments when it adds a ring[] entry$/;"	m	struct:virtq_used
idx	src/virt_disk.h	/^  unsigned short idx;       \/\/ driver will write ring[idx] next$/;"	m	struct:virtq_avail
idx	src/virt_disk.h	/^  unsigned short idx;   \/\/ device increments when it adds a ring[] entry$/;"	m	struct:virtq_used
info	backup/virt_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon1	file:
info	src/virt_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon2	file:
init_bin_tree_mem	build/benos/buddy_c.s	/^init_bin_tree_mem:$/;"	l
init_bin_tree_mem	src/buddy.c	/^unsigned long init_bin_tree_mem()$/;"	f
init_proc_kstack	build/benos/proc_c.s	/^init_proc_kstack:$/;"	l
init_proc_kstack	src/proc.c	/^void init_proc_kstack(pgt_t pagetable)$/;"	f
initcode	build/benos/proc_c.s	/^initcode:$/;"	l
initcode	src/proc.c	/^unsigned char initcode[] = {$/;"	v
inode	backup/fs.h	/^struct inode$/;"	s
inode	src/fs.h	/^struct inode$/;"	s
inode_num	src/fs.h	/^	unsigned int inode_num;$/;"	m	struct:superblock
inode_which_block	build/benos/fs_c.s	/^inode_which_block:$/;"	l
inode_which_block	mkfs/mkfs.c	/^unsigned int inode_which_block(unsigned int inum, struct superblock sb)$/;"	f
inode_which_block	src/fs.c	/^unsigned int inode_which_block(unsigned int inum, struct superblock sb)$/;"	f
intr_off	build/benos/src_trap_c.s	/^intr_off:$/;"	l
intr_off	include/riscv.h	/^static inline void intr_off()$/;"	f
intr_on	build/benos/proc_c.s	/^intr_on:$/;"	l
intr_on	build/benos/src_trap_c.s	/^intr_on:$/;"	l
intr_on	include/riscv.h	/^static inline void intr_on()$/;"	f
inum	src/fs.h	/^	unsigned short inum;$/;"	m	struct:dirent
ip	src/fd.h	/^	struct inode *ip;$/;"	m	struct:file	typeref:struct:file::inode
kalloc	build/benos/vm_c.s	/^kalloc:$/;"	l
kalloc	src/vm.c	/^void *kalloc(void)$/;"	f
kernel_ctxt	src/proc.c	/^struct proc kernel_ctxt;$/;"	v	typeref:struct:proc
kernel_hartid	src/proc.h	/^  \/*  32 *\/ unsigned long kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe
kernel_main	build/benos/kernel_main_c.s	/^kernel_main:$/;"	l
kernel_main	src/kernel_main.c	/^void kernel_main()$/;"	f
kernel_satp	src/proc.h	/^  \/*   0 *\/ unsigned long kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe
kernel_sp	src/proc.h	/^  \/*   8 *\/ unsigned long kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe
kernel_trap	src/proc.h	/^  \/*  16 *\/ unsigned long kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe
kfree	build/benos/vm_c.s	/^kfree:$/;"	l
kfree	src/vm.c	/^void kfree(void *p)$/;"	f
kill	build/benos/proc_c.s	/^kill:$/;"	l
kill	src/proc.c	/^int kill(int pid)$/;"	f
killed	src/proc.h	/^	int killed;$/;"	m	struct:proc
kp_free_mem	build/benos/vm_c.s	/^kp_free_mem:$/;"	l
kp_free_mem	src/vm.c	/^void kp_free_mem()$/;"	f
kstack	src/proc.h	/^	unsigned long *kstack;$/;"	m	struct:proc
left	src/buddy.h	/^	struct buddy_blk *left;$/;"	m	struct:buddy_blk	typeref:struct:buddy_blk::buddy_blk
len	backup/virt_disk.h	/^  unsigned int len;$/;"	m	struct:virtq_desc
len	backup/virt_disk.h	/^  unsigned int len;$/;"	m	struct:virtq_used_elem
len	src/virt_disk.h	/^  unsigned int len;$/;"	m	struct:virtq_desc
len	src/virt_disk.h	/^  unsigned int len;$/;"	m	struct:virtq_used_elem
loadsec	build/benos/fs_c.s	/^loadsec:$/;"	l
loadsec	src/fs.c	/^void loadsec(pgt_t pagetable, struct inode *ip, unsigned long va, unsigned int offset, unsigned int sz)$/;"	f
lock	src/pipe.h	/^	struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock
locked	src/locks.h	/^	unsigned int locked;$/;"	m	struct:spinlock
log_num	src/fs.h	/^	unsigned int log_num;$/;"	m	struct:superblock
loop	user/initcode.S	/^loop:$/;"	l
loop	user/initcode.s	/^loop:$/;"	l
loop	user/sleep_test.S	/^loop:$/;"	l
loop	user/sleep_test.s	/^loop:$/;"	l
mach	src/fs.h	/^	unsigned short mach;$/;"	m	struct:elfhdr
magic_num	src/fs.h	/^	unsigned int magic_num;$/;"	m	struct:elfhdr
magic_num	src/fs.h	/^	unsigned int magic_num;$/;"	m	struct:superblock
main	mkfs/mkfs.c	/^int main(int argc, char **argv)$/;"	f
main	user/first_test.c	/^int main()$/;"	f
main	user/first_test.s	/^main:$/;"	l
major	backup/fs.h	/^	short major;	\/\/what kind of device? eg. serial port$/;"	m	struct:dinode
major	src/fd.h	/^	short major;$/;"	m	struct:file
major	src/fs.h	/^	short major;	\/\/what kind of device? eg. serial port$/;"	m	struct:dinode
map_page	build/benos/vm_c.s	/^map_page:$/;"	l
map_page	src/vm.c	/^int map_page(pgt_t pagetable, unsigned long pa, unsigned long va,unsigned long size, int perm)$/;"	f
mem_linked_list	src/kernel_main.c	/^extern struct mem_linked_list$/;"	s	file:
mem_linked_list	src/vm.c	/^struct mem_linked_list$/;"	s	file:
mem_ll	src/vm.c	/^}mem_ll;$/;"	v	typeref:struct:mem_linked_list
memcpy	build/benos/string_c.s	/^memcpy:$/;"	l
memcpy	src/string.c	/^void *memcpy(void *dst, const void *src, int n)$/;"	f
memmove	build/benos/string_c.s	/^memmove:$/;"	l
memmove	src/string.c	/^void *memmove(char *dst, const char *src, int n)$/;"	f
memset	build/benos/string_c.s	/^memset:$/;"	l
memset	src/string.c	/^void *memset(void *s, int val, unsigned int count)$/;"	f
memsz	src/fs.h	/^	unsigned long memsz;$/;"	m	struct:proghdr
mepc	sbi/sbi_trap_reg.h	/^	unsigned long mepc;$/;"	m	struct:sbi_context_str
min	mkfs/mkfs.c	19;"	d	file:
minor	backup/fs.h	/^	short minor;	\/\/which one? COM5$/;"	m	struct:dinode
minor	src/fs.h	/^	short minor;	\/\/which one? COM5$/;"	m	struct:dinode
mstatus	sbi/sbi_trap_reg.h	/^	unsigned long mstatus;$/;"	m	struct:sbi_context_str
name	src/fs.h	/^	char name[14];$/;"	m	struct:dirent
name	src/proc.h	/^	char name[10];$/;"	m	struct:proc
ndev	backup/fs.h	/^	unsigned int ndev;		\/\/device number$/;"	m	struct:inode
ndev	src/fs.h	/^	unsigned int ndev;		\/\/device number$/;"	m	struct:inode
new_pipe	build/benos/pipe_c.s	/^new_pipe:$/;"	l
new_pipe	src/pipe.c	/^int new_pipe(struct file **f0, struct file **f1)$/;"	f
next	backup/virt_disk.h	/^  unsigned short next;$/;"	m	struct:virtq_desc
next	src/virt_disk.h	/^  unsigned short next;$/;"	m	struct:virtq_desc
ninode	backup/fs.h	/^	unsigned int ninode;	\/\/inode number$/;"	m	struct:inode
ninode	src/fs.h	/^	unsigned int ninode;	\/\/inode number$/;"	m	struct:inode
nlink	backup/fs.h	/^	short nlink;	\/\/number of link to the inode$/;"	m	struct:dinode
nlink	src/fs.h	/^	short nlink;	\/\/number of link to the inode$/;"	m	struct:dinode
nrd	src/pipe.h	/^	int nrd;$/;"	m	struct:pipe
nwr	src/pipe.h	/^	int nwr;$/;"	m	struct:pipe
nxt	backup/virt_disk.h	/^	struct buf *nxt;$/;"	m	struct:buf	typeref:struct:buf::buf
nxt	src/kernel_main.c	/^	struct mem_linked_list *nxt;$/;"	m	struct:mem_linked_list	typeref:struct:mem_linked_list::mem_linked_list	file:
nxt	src/virt_disk.h	/^	struct buf *nxt;$/;"	m	struct:buf	typeref:struct:buf::buf
nxt	src/vm.c	/^	struct mem_linked_list *nxt;$/;"	m	struct:mem_linked_list	typeref:struct:mem_linked_list::mem_linked_list	file:
off	src/fd.h	/^	unsigned int off;$/;"	m	struct:file
off	src/fs.h	/^	unsigned long off;$/;"	m	struct:proghdr
ofile	src/proc.h	/^	struct file *ofile[MAX_OFILE];$/;"	m	struct:proc	typeref:struct:proc::file
open	user/usys.S	/^open:$/;"	l
open	user/usys.s	/^open:$/;"	l
ops	backup/virt_disk.c	/^  struct virtio_blk_req ops[NUM];$/;"	m	struct:disk	typeref:struct:disk::virtio_blk_req	file:
ops	src/virt_disk.c	/^  struct virtio_blk_req ops[NUM];$/;"	m	struct:disk	typeref:struct:disk::virtio_blk_req	file:
order	src/buddy.h	/^	int order;$/;"	m	struct:buddy_blk
ori_ptr	build/benos/vm_c.s	/^ori_ptr:$/;"	l
ori_ptr	src/vm.c	/^struct mem_linked_list *ori_ptr = &mem_ll;$/;"	v	typeref:struct:mem_linked_list
orig_a0	include/asm/ptregs.h	/^	unsigned long orig_a0;$/;"	m	struct:pt_regs
paddr	src/fs.h	/^	unsigned long paddr;$/;"	m	struct:proghdr
panic	build/benos/printf_c.s	/^panic:$/;"	l
panic	src/printf.c	/^void panic(char *s)$/;"	f
parent	src/proc.h	/^	struct proc *parent;$/;"	m	struct:proc	typeref:struct:proc::proc
pgt_t	include/def.h	/^typedef unsigned long *pgt_t;$/;"	t
phentsize	src/fs.h	/^	unsigned short phentsize;	\/\/每个program header的长度$/;"	m	struct:elfhdr
phnum	src/fs.h	/^	unsigned short phnum;		\/\/表示有几个program header$/;"	m	struct:elfhdr
phyoff	src/fs.h	/^	unsigned long phyoff;$/;"	m	struct:elfhdr
pid	build/benos/proc_c.s	/^pid:$/;"	l
pid	src/proc.c	/^int pid = 0;$/;"	v
pid	src/proc.h	/^	int pid;$/;"	m	struct:proc
pipe	src/fd.h	/^	struct pipe *pipe;$/;"	m	struct:file	typeref:struct:file::pipe
pipe	src/pipe.h	/^struct pipe$/;"	s
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/usys.s	/^pipe:$/;"	l
pipe_rd	build/benos/pipe_c.s	/^pipe_rd:$/;"	l
pipe_rd	src/pipe.c	/^int pipe_rd(struct pipe *pipe, unsigned long addr, int len)$/;"	f
pipe_wr	build/benos/pipe_c.s	/^pipe_wr:$/;"	l
pipe_wr	src/pipe.c	/^int pipe_wr(struct pipe *pipe, unsigned long addr, int len)$/;"	f
plic_claim	backup/plic.c	/^plic_claim(void)$/;"	f
plic_claim	build/benos/plic_c.s	/^plic_claim:$/;"	l
plic_claim	src/plic.c	/^plic_claim(void)$/;"	f
plic_complete	backup/plic.c	/^plic_complete(int irq)$/;"	f
plic_complete	build/benos/plic_c.s	/^plic_complete:$/;"	l
plic_complete	src/plic.c	/^plic_complete(int irq)$/;"	f
plicinit	backup/plic.c	/^plicinit(void)$/;"	f
plicinit	build/benos/plic_c.s	/^plicinit:$/;"	l
plicinit	src/plic.c	/^plicinit(void)$/;"	f
plicinithart	backup/plic.c	/^plicinithart(void)$/;"	f
plicinithart	build/benos/plic_c.s	/^plicinithart:$/;"	l
plicinithart	src/plic.c	/^plicinithart(void)$/;"	f
pre	backup/virt_disk.h	/^	struct buf *pre;$/;"	m	struct:buf	typeref:struct:buf::buf
pre	src/virt_disk.h	/^	struct buf *pre;$/;"	m	struct:buf	typeref:struct:buf::buf
print	user/usys.S	/^print:$/;"	l
print	user/usys.s	/^print:$/;"	l
print_bin_tree	build/benos/buddy_c.s	/^print_bin_tree:$/;"	l
print_bin_tree	src/buddy.c	/^void print_bin_tree(struct buddy_blk *node)$/;"	f
print_int	build/benos/printf_c.s	/^print_int:$/;"	l
print_int	src/printf.c	/^void print_int(unsigned int num, int base)$/;"	f
print_lock	src/kernel_main.c	/^struct spinlock print_lock;$/;"	v	typeref:struct:spinlock
printf	build/benos/printf_c.s	/^printf:$/;"	l
printf	src/printf.c	/^void printf(char *fmt, ...)$/;"	f
proc	src/proc.h	/^struct proc$/;"	s
proc_list	src/proc.c	/^struct proc proc_list[MAX_PROC];$/;"	v	typeref:struct:proc
proc_pagetable	build/benos/proc_c.s	/^proc_pagetable:$/;"	l
proc_pagetable	src/proc.c	/^pgt_t proc_pagetable()$/;"	f
proc_pagetable	src/proc.h	/^	pgt_t proc_pagetable;$/;"	m	struct:proc
proc_ptr	build/benos/proc_c.s	/^proc_ptr:$/;"	l
proc_ptr	src/proc.c	/^struct proc *proc_ptr = &kernel_ctxt;$/;"	v	typeref:struct:proc
prog_size	src/proc.h	/^	unsigned long prog_size;$/;"	m	struct:proc
proghdr	src/fs.h	/^struct proghdr$/;"	s
pt_regs	include/asm/ptregs.h	/^struct pt_regs {$/;"	s
pte_t	include/def.h	/^typedef unsigned long pte_t;$/;"	t
r_cpuid	include/riscv.h	/^static inline unsigned long r_cpuid()$/;"	f
r_mcause	build/sbi/sbi_trap_c.s	/^r_mcause:$/;"	l
r_mcause	include/riscv.h	/^static inline unsigned long r_mcause()$/;"	f
r_mhartid	build/sbi/sbi_trap_c.s	/^r_mhartid:$/;"	l
r_mhartid	include/riscv.h	/^static inline unsigned long r_mhartid()$/;"	f
r_mie	build/sbi/timer_c.s	/^r_mie:$/;"	l
r_mie	include/riscv.h	/^static inline unsigned long r_mie()$/;"	f
r_mstatus	build/sbi/sbi_main_c.s	/^r_mstatus:$/;"	l
r_mstatus	include/riscv.h	/^static inline unsigned long r_mstatus()$/;"	f
r_scause	build/benos/src_trap_c.s	/^r_scause:$/;"	l
r_scause	include/riscv.h	/^static inline unsigned long r_scause()$/;"	f
r_sepc	build/benos/src_trap_c.s	/^r_sepc:$/;"	l
r_sepc	include/riscv.h	/^static inline unsigned long r_sepc()$/;"	f
r_sie	build/benos/src_trap_c.s	/^r_sie:$/;"	l
r_sie	build/sbi/sbi_main_c.s	/^r_sie:$/;"	l
r_sie	include/riscv.h	/^static inline unsigned long r_sie()$/;"	f
r_sip	build/benos/src_trap_c.s	/^r_sip:$/;"	l
r_sip	include/riscv.h	/^static inline unsigned long r_sip()$/;"	f
r_sstatus	build/benos/proc_c.s	/^r_sstatus:$/;"	l
r_sstatus	build/benos/src_trap_c.s	/^r_sstatus:$/;"	l
r_sstatus	include/riscv.h	/^static inline unsigned long r_sstatus()$/;"	f
ra	include/asm/ptregs.h	/^	unsigned long ra;$/;"	m	struct:pt_regs
ra	sbi/sbi_trap_reg.h	/^	unsigned long ra;$/;"	m	struct:sbi_context_str
ra	src/proc.h	/^	unsigned long ra;$/;"	m	struct:context
ra	src/proc.h	/^  \/*  40 *\/ unsigned long ra;$/;"	m	struct:trapframe
rd	src/pipe.h	/^	int rd;$/;"	m	struct:pipe
rd_inode	build/benos/fs_c.s	/^rd_inode:$/;"	l
rd_inode	mkfs/mkfs.c	/^void rd_inode(unsigned int inum, struct dinode *dinode_buf)$/;"	f
rd_inode	src/fs.c	/^void rd_inode(unsigned int inum, struct inode *inode_buf)$/;"	f
rd_sec	mkfs/mkfs.c	/^void rd_sec(unsigned int n, void *buf)$/;"	f
read	user/usys.S	/^read:$/;"	l
read	user/usys.s	/^read:$/;"	l
read_elfhr	build/benos/fs_c.s	/^read_elfhr:$/;"	l
read_elfhr	src/fs.c	/^void read_elfhr(struct elfhdr* hdr, struct proghdr *phdr, struct inode *ino_ptr)$/;"	f
read_from_inode	build/benos/fs_c.s	/^read_from_inode:$/;"	l
read_from_inode	src/fs.c	/^int read_from_inode(struct inode *ip, unsigned long dst, unsigned long offset, unsigned int len, int to_where)$/;"	f
read_reg	include/riscv.h	4;"	d
read_sb	build/benos/fs_c.s	/^read_sb:$/;"	l
read_sb	src/fs.c	/^static void read_sb(struct superblock *sb)$/;"	f	file:
readable	src/fd.h	/^	char readable;$/;"	m	struct:file
ref	backup/fs.h	/^	int ref;$/;"	m	struct:inode
ref	src/fs.h	/^	int ref;$/;"	m	struct:inode
ref_cnt	src/fd.h	/^	int ref_cnt;$/;"	m	struct:file
refcnt	backup/virt_disk.h	/^	unsigned int refcnt;$/;"	m	struct:buf
refcnt	src/virt_disk.h	/^	unsigned int refcnt;$/;"	m	struct:buf
release	build/benos/locks_c.s	/^release:$/;"	l
release	src/locks.c	/^void release(struct spinlock *lk)$/;"	f
reserved	backup/virt_disk.h	/^  unsigned int reserved;$/;"	m	struct:virtio_blk_req
reserved	src/virt_disk.h	/^  unsigned int reserved;$/;"	m	struct:virtio_blk_req
right	src/buddy.h	/^	struct buddy_blk *right;$/;"	m	struct:buddy_blk	typeref:struct:buddy_blk::buddy_blk
ring	backup/virt_disk.h	/^  struct virtq_used_elem ring[NUM];$/;"	m	struct:virtq_used	typeref:struct:virtq_used::virtq_used_elem
ring	backup/virt_disk.h	/^  unsigned short ring[NUM]; \/\/ descriptor numbers of chain heads$/;"	m	struct:virtq_avail
ring	src/virt_disk.h	/^  struct virtq_used_elem ring[NUM];$/;"	m	struct:virtq_used	typeref:struct:virtq_used::virtq_used_elem
ring	src/virt_disk.h	/^  unsigned short ring[NUM]; \/\/ descriptor numbers of chain heads$/;"	m	struct:virtq_avail
s0	include/asm/ptregs.h	/^	unsigned long s0;$/;"	m	struct:pt_regs
s0	sbi/sbi_trap_reg.h	/^	unsigned long s0;$/;"	m	struct:sbi_context_str
s0	src/proc.h	/^	unsigned long s0;$/;"	m	struct:context
s0	src/proc.h	/^  \/*  96 *\/ unsigned long s0;$/;"	m	struct:trapframe
s1	include/asm/ptregs.h	/^	unsigned long s1;$/;"	m	struct:pt_regs
s1	sbi/sbi_trap_reg.h	/^	unsigned long s1;$/;"	m	struct:sbi_context_str
s1	src/proc.h	/^	unsigned long s1;$/;"	m	struct:context
s1	src/proc.h	/^  \/* 104 *\/ unsigned long s1;$/;"	m	struct:trapframe
s10	include/asm/ptregs.h	/^	unsigned long s10;$/;"	m	struct:pt_regs
s10	sbi/sbi_trap_reg.h	/^	unsigned long s10;$/;"	m	struct:sbi_context_str
s10	src/proc.h	/^	unsigned long s10;$/;"	m	struct:context
s10	src/proc.h	/^  \/* 240 *\/ unsigned long s10;$/;"	m	struct:trapframe
s11	include/asm/ptregs.h	/^	unsigned long s11;$/;"	m	struct:pt_regs
s11	sbi/sbi_trap_reg.h	/^	unsigned long s11;$/;"	m	struct:sbi_context_str
s11	src/proc.h	/^	unsigned long s11;$/;"	m	struct:context
s11	src/proc.h	/^  \/* 248 *\/ unsigned long s11;$/;"	m	struct:trapframe
s2	include/asm/ptregs.h	/^	unsigned long s2;$/;"	m	struct:pt_regs
s2	sbi/sbi_trap_reg.h	/^	unsigned long s2;$/;"	m	struct:sbi_context_str
s2	src/proc.h	/^	unsigned long s2;$/;"	m	struct:context
s2	src/proc.h	/^  \/* 176 *\/ unsigned long s2;$/;"	m	struct:trapframe
s3	include/asm/ptregs.h	/^	unsigned long s3;$/;"	m	struct:pt_regs
s3	sbi/sbi_trap_reg.h	/^	unsigned long s3;$/;"	m	struct:sbi_context_str
s3	src/proc.h	/^	unsigned long s3;$/;"	m	struct:context
s3	src/proc.h	/^  \/* 184 *\/ unsigned long s3;$/;"	m	struct:trapframe
s4	include/asm/ptregs.h	/^	unsigned long s4;$/;"	m	struct:pt_regs
s4	sbi/sbi_trap_reg.h	/^	unsigned long s4;$/;"	m	struct:sbi_context_str
s4	src/proc.h	/^	unsigned long s4;$/;"	m	struct:context
s4	src/proc.h	/^  \/* 192 *\/ unsigned long s4;$/;"	m	struct:trapframe
s5	include/asm/ptregs.h	/^	unsigned long s5;$/;"	m	struct:pt_regs
s5	sbi/sbi_trap_reg.h	/^	unsigned long s5;$/;"	m	struct:sbi_context_str
s5	src/proc.h	/^	unsigned long s5;$/;"	m	struct:context
s5	src/proc.h	/^  \/* 200 *\/ unsigned long s5;$/;"	m	struct:trapframe
s6	include/asm/ptregs.h	/^	unsigned long s6;$/;"	m	struct:pt_regs
s6	sbi/sbi_trap_reg.h	/^	unsigned long s6;$/;"	m	struct:sbi_context_str
s6	src/proc.h	/^  \/* 208 *\/ unsigned long s6;$/;"	m	struct:trapframe
s7	include/asm/ptregs.h	/^	unsigned long s7;$/;"	m	struct:pt_regs
s7	sbi/sbi_trap_reg.h	/^	unsigned long s7;$/;"	m	struct:sbi_context_str
s7	src/proc.h	/^	unsigned long s7;$/;"	m	struct:context
s7	src/proc.h	/^  \/* 216 *\/ unsigned long s7;$/;"	m	struct:trapframe
s8	include/asm/ptregs.h	/^	unsigned long s8;$/;"	m	struct:pt_regs
s8	sbi/sbi_trap_reg.h	/^	unsigned long s8;$/;"	m	struct:sbi_context_str
s8	src/proc.h	/^	unsigned long s8;$/;"	m	struct:context
s8	src/proc.h	/^  \/* 224 *\/ unsigned long s8;$/;"	m	struct:trapframe
s9	include/asm/ptregs.h	/^	unsigned long s9;$/;"	m	struct:pt_regs
s9	sbi/sbi_trap_reg.h	/^	unsigned long s9;$/;"	m	struct:sbi_context_str
s9	src/proc.h	/^	unsigned long s9;$/;"	m	struct:context
s9	src/proc.h	/^  \/* 232 *\/ unsigned long s9;$/;"	m	struct:trapframe
s_bmap	src/fs.h	/^	unsigned int s_bmap;$/;"	m	struct:superblock
s_data_blk	src/fs.h	/^	unsigned int s_data_blk;$/;"	m	struct:superblock
s_inode_blk	src/fs.h	/^	unsigned int s_inode_blk;$/;"	m	struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sb	src/fs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbadaddr	include/asm/ptregs.h	/^	unsigned long sbadaddr;$/;"	m	struct:pt_regs
sbi_context_str	sbi/sbi_trap_reg.h	/^struct sbi_context_str {$/;"	s
sbi_ecall_handler	build/sbi/sbi_trap_c.s	/^sbi_ecall_handler:$/;"	l
sbi_ecall_handler	sbi/sbi_trap.c	/^void sbi_ecall_handler(int id, struct sbi_context_str *ptr)$/;"	f
sbi_exception_vec	build/sbi/sbi_trap_entry_s.s	/^sbi_exception_vec:$/;"	l
sbi_exception_vec	sbi/sbi_trap_entry.S	/^sbi_exception_vec:$/;"	l
sbi_main	build/sbi/sbi_main_c.s	/^sbi_main:$/;"	l
sbi_main	sbi/sbi_main.c	/^void sbi_main()$/;"	f
sbi_trap_handler	build/sbi/sbi_trap_c.s	/^sbi_trap_handler:$/;"	l
sbi_trap_handler	sbi/sbi_trap.c	/^void sbi_trap_handler(struct sbi_context_str *ptr)$/;"	f
sbi_trap_init	build/sbi/sbi_trap_c.s	/^sbi_trap_init:$/;"	l
sbi_trap_init	sbi/sbi_trap.c	/^void sbi_trap_init()$/;"	f
scause	include/asm/ptregs.h	/^	unsigned long scause;$/;"	m	struct:pt_regs
sched	build/benos/proc_c.s	/^sched:$/;"	l
sched	src/proc.c	/^void sched()$/;"	f
scheduler	build/benos/proc_c.s	/^scheduler:$/;"	l
scheduler	src/proc.c	/^void scheduler()$/;"	f
sector	backup/virt_disk.h	/^  unsigned long sector;$/;"	m	struct:virtio_blk_req
sector	src/virt_disk.h	/^  unsigned long sector;$/;"	m	struct:virtio_blk_req
sepc	include/asm/ptregs.h	/^	unsigned long sepc;$/;"	m	struct:pt_regs
sf_fp	src/back_trace.c	/^	unsigned long sf_fp;$/;"	m	struct:stack_frame	file:
sf_ra	src/back_trace.c	/^	unsigned long sf_ra;$/;"	m	struct:stack_frame	file:
sfence_vma	include/riscv.h	/^static inline void sfence_vma()$/;"	f
shentsize	src/fs.h	/^	unsigned short shentsize;$/;"	m	struct:elfhdr
shnum	src/fs.h	/^	unsigned short shnum;$/;"	m	struct:elfhdr
shoff	src/fs.h	/^	unsigned long shoff;$/;"	m	struct:elfhdr
show_regs	build/benos/src_trap_c.s	/^show_regs:$/;"	l
show_regs	src/src_trap.c	/^void show_regs(struct pt_regs *reg_ptr)$/;"	f
shstrndx	src/fs.h	/^	unsigned short shstrndx;$/;"	m	struct:elfhdr
size	backup/fs.h	/^	unsigned int size;$/;"	m	struct:dinode
size	src/fs.h	/^	unsigned int size;$/;"	m	struct:dinode
size	src/fs.h	/^	unsigned int size;$/;"	m	struct:superblock
sleep	build/benos/proc_c.s	/^sleep:$/;"	l
sleep	src/proc.c	/^void sleep(unsigned long *chan, struct spinlock *lock)$/;"	f
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/usys.s	/^sleep:$/;"	l
sleep_chan	src/proc.h	/^	unsigned long sleep_chan;$/;"	m	struct:proc
smode_exeception_handler	build/benos/src_trap_c.s	/^smode_exeception_handler:$/;"	l
smode_exeception_handler	src/src_trap.c	/^void smode_exeception_handler(struct pt_regs *reg_ptr, unsigned long s_cause)$/;"	f
smode_exeception_vec	build/benos/src_trap_entry_s.s	/^smode_exeception_vec:$/;"	l
smode_exeception_vec	src/src_trap_entry.S	/^smode_exeception_vec:$/;"	l
sp	include/asm/ptregs.h	/^	unsigned long sp;$/;"	m	struct:pt_regs
sp	sbi/sbi_trap_reg.h	/^	unsigned long sp;$/;"	m	struct:sbi_context_str
sp	src/proc.h	/^	unsigned long sp;$/;"	m	struct:context
sp	src/proc.h	/^  \/*  48 *\/ unsigned long sp;$/;"	m	struct:trapframe
spinlock	src/locks.h	/^struct spinlock$/;"	s
src_trap_init	build/benos/src_trap_c.s	/^src_trap_init:$/;"	l
src_trap_init	src/src_trap.c	/^void src_trap_init()$/;"	f
sstatus	include/asm/ptregs.h	/^	unsigned long sstatus;$/;"	m	struct:pt_regs
stack0	build/benos/kernel_boot_s.s	/^stack0:$/;"	l
stack0	build/sbi/sbi_boot_s.s	/^stack0:$/;"	l
stack0	sbi/sbi_boot.S	/^stack0:$/;"	l
stack0	src/kernel_boot.S	/^stack0:$/;"	l
stack1	build/benos/kernel_boot_s.s	/^stack1:$/;"	l
stack1	build/sbi/sbi_boot_s.s	/^stack1:$/;"	l
stack1	sbi/sbi_boot.S	/^stack1:$/;"	l
stack1	src/kernel_boot.S	/^stack1:$/;"	l
stack2	build/benos/kernel_boot_s.s	/^stack2:$/;"	l
stack2	build/sbi/sbi_boot_s.s	/^stack2:$/;"	l
stack2	sbi/sbi_boot.S	/^stack2:$/;"	l
stack2	src/kernel_boot.S	/^stack2:$/;"	l
stack3	build/benos/kernel_boot_s.s	/^stack3:$/;"	l
stack3	build/sbi/sbi_boot_s.s	/^stack3:$/;"	l
stack3	sbi/sbi_boot.S	/^stack3:$/;"	l
stack3	src/kernel_boot.S	/^stack3:$/;"	l
stack_frame	src/back_trace.c	/^struct stack_frame$/;"	s	file:
staddr	src/buddy.h	/^	unsigned long staddr;$/;"	m	struct:buddy_blk
start	build/benos/buddy_c.s	/^start:$/;"	l
start	src/buddy.c	/^struct buddy_blk *start = (struct buddy_blk *)_free_mem_start;$/;"	v	typeref:struct:buddy_blk
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.s	/^start:$/;"	l
state	src/buddy.h	/^	enum State state;$/;"	m	struct:buddy_blk	typeref:enum:buddy_blk::State
state	src/proc.h	/^	int state;$/;"	m	struct:proc
status	backup/virt_disk.c	/^    char status;$/;"	m	struct:disk::__anon1	file:
status	src/virt_disk.c	/^    char status;$/;"	m	struct:disk::__anon2	file:
strncmp	build/benos/string_c.s	/^strncmp:$/;"	l
strncmp	src/string.c	/^int strncmp(const char *p, const char *q, unsigned int n)$/;"	f
superblock	src/fs.h	/^struct superblock$/;"	s
swtch	build/benos/switch_s.s	/^swtch:$/;"	l
swtch	src/switch.S	/^swtch:$/;"	l
sys_exec	build/benos/src_trap_c.s	/^sys_exec:$/;"	l
sys_exec	src/src_trap.c	/^int sys_exec()$/;"	f
sys_exit	build/benos/src_trap_c.s	/^sys_exit:$/;"	l
sys_exit	src/src_trap.c	/^int sys_exit()$/;"	f
sys_fork	build/benos/src_trap_c.s	/^sys_fork:$/;"	l
sys_fork	src/src_trap.c	/^int sys_fork()$/;"	f
sys_mmap	build/benos/src_trap_c.s	/^sys_mmap:$/;"	l
sys_mmap	src/src_trap.c	/^int sys_mmap()$/;"	f
sys_open	build/benos/src_trap_c.s	/^sys_open:$/;"	l
sys_open	src/src_trap.c	/^int sys_open()$/;"	f
sys_pipe	build/benos/src_trap_c.s	/^sys_pipe:$/;"	l
sys_pipe	src/src_trap.c	/^int sys_pipe()$/;"	f
sys_print	build/benos/src_trap_c.s	/^sys_print:$/;"	l
sys_print	src/src_trap.c	/^unsigned long sys_print()$/;"	f
sys_read	build/benos/src_trap_c.s	/^sys_read:$/;"	l
sys_read	src/src_trap.c	/^int sys_read()$/;"	f
sys_sleep	build/benos/src_trap_c.s	/^sys_sleep:$/;"	l
sys_sleep	src/src_trap.c	/^int sys_sleep()$/;"	f
sys_write	build/benos/src_trap_c.s	/^sys_write:$/;"	l
sys_write	src/src_trap.c	/^int sys_write()$/;"	f
syscall	build/benos/src_trap_c.s	/^syscall:$/;"	l
syscall	src/src_trap.c	/^static unsigned long (*syscall[])(void) = {$/;"	v	file:
systicks	build/benos/src_trap_c.s	/^systicks:$/;"	l
systicks	src/src_trap.c	/^unsigned long systicks = 0;$/;"	v
systicks_lock	build/benos/src_trap_c.s	/^systicks_lock:$/;"	l
systicks_lock	src/src_trap.c	/^struct spinlock systicks_lock = {0};$/;"	v	typeref:struct:spinlock
t0	include/asm/ptregs.h	/^	unsigned long t0;$/;"	m	struct:pt_regs
t0	sbi/sbi_trap_reg.h	/^	unsigned long t0;$/;"	m	struct:sbi_context_str
t0	src/proc.h	/^  \/*  72 *\/ unsigned long t0;$/;"	m	struct:trapframe
t1	include/asm/ptregs.h	/^	unsigned long t1;$/;"	m	struct:pt_regs
t1	sbi/sbi_trap_reg.h	/^	unsigned long t1;$/;"	m	struct:sbi_context_str
t1	src/proc.h	/^  \/*  80 *\/ unsigned long t1;$/;"	m	struct:trapframe
t2	include/asm/ptregs.h	/^	unsigned long t2;$/;"	m	struct:pt_regs
t2	sbi/sbi_trap_reg.h	/^	unsigned long t2;$/;"	m	struct:sbi_context_str
t2	src/proc.h	/^  \/*  88 *\/ unsigned long t2;$/;"	m	struct:trapframe
t3	include/asm/ptregs.h	/^	unsigned long t3;$/;"	m	struct:pt_regs
t3	sbi/sbi_trap_reg.h	/^	unsigned long t3;$/;"	m	struct:sbi_context_str
t3	src/proc.h	/^  \/* 256 *\/ unsigned long t3;$/;"	m	struct:trapframe
t4	include/asm/ptregs.h	/^	unsigned long t4;$/;"	m	struct:pt_regs
t4	sbi/sbi_trap_reg.h	/^	unsigned long t4;$/;"	m	struct:sbi_context_str
t4	src/proc.h	/^  \/* 264 *\/ unsigned long t4;$/;"	m	struct:trapframe
t5	include/asm/ptregs.h	/^	unsigned long t5;$/;"	m	struct:pt_regs
t5	sbi/sbi_trap_reg.h	/^	unsigned long t5;$/;"	m	struct:sbi_context_str
t5	src/proc.h	/^  \/* 272 *\/ unsigned long t5;$/;"	m	struct:trapframe
t6	include/asm/ptregs.h	/^	unsigned long t6;$/;"	m	struct:pt_regs
t6	sbi/sbi_trap_reg.h	/^	unsigned long t6;$/;"	m	struct:sbi_context_str
t6	src/proc.h	/^  \/* 280 *\/ unsigned long t6;$/;"	m	struct:trapframe
test1	user/first_test.c	/^char test1[] = "QWER";$/;"	v
test1	user/first_test.s	/^test1:$/;"	l
test2	user/first_test.c	/^char test2[] = "ASDF";$/;"	v
test2	user/first_test.s	/^test2:$/;"	l
test3	user/first_test.c	/^char test3[] = "ZXCV";$/;"	v
test3	user/first_test.s	/^test3:$/;"	l
test4	user/first_test.c	/^char test4[] = "!@#$";$/;"	v
test4	user/first_test.s	/^test4:$/;"	l
test_num	build/benos/kernel_main_c.s	/^test_num:$/;"	l
test_num	src/kernel_main.c	/^int test_num = 0;$/;"	v
test_str	user/first_test.c	/^char test_str[] = "This is a load test\\n";$/;"	v
test_str	user/first_test.s	/^test_str:$/;"	l
timer_init	build/sbi/timer_c.s	/^timer_init:$/;"	l
timer_init	sbi/timer.c	/^void timer_init()$/;"	f
timer_int_handler	build/sbi/sbi_trap_c.s	/^timer_int_handler:$/;"	l
timer_int_handler	sbi/sbi_trap.c	/^void timer_int_handler(struct sbi_context_str *ptr)$/;"	f
tp	include/asm/ptregs.h	/^	unsigned long tp;$/;"	m	struct:pt_regs
tp	sbi/sbi_trap_reg.h	/^	unsigned long tp;$/;"	m	struct:sbi_context_str
tp	src/proc.h	/^  \/*  64 *\/ unsigned long tp;$/;"	m	struct:trapframe
trampoline	build/benos/trampoline_s.s	/^trampoline:$/;"	l
trampoline	src/trampoline.S	/^trampoline:$/;"	l
trapframe	src/proc.h	/^	struct trapframe *trapframe;$/;"	m	struct:proc	typeref:struct:proc::trapframe
trapframe	src/proc.h	/^struct trapframe {$/;"	s
type	backup/fs.h	/^	short type;		\/\/file directory device$/;"	m	struct:dinode
type	backup/virt_disk.h	/^  unsigned int type; \/\/ VIRTIO_BLK_T_IN or ..._OUT$/;"	m	struct:virtio_blk_req
type	src/fd.h	/^	enum {FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE} type;$/;"	m	struct:file	typeref:enum:file::__anon3
type	src/fs.h	/^	short type;		\/\/file directory device$/;"	m	struct:dinode
type	src/fs.h	/^	unsigned int type;$/;"	m	struct:proghdr
type	src/fs.h	/^	unsigned short type;$/;"	m	struct:elfhdr
type	src/virt_disk.h	/^  unsigned int type; \/\/ VIRTIO_BLK_T_IN or ..._OUT$/;"	m	struct:virtio_blk_req
uart_clk	build/sbi/uart_c.s	/^uart_clk:$/;"	l
uart_clk	sbi/uart.c	/^static unsigned int uart_clk = 1843200;$/;"	v	file:
uart_init	build/sbi/uart_c.s	/^uart_init:$/;"	l
uart_init	sbi/uart.c	/^void uart_init()$/;"	f
uart_rd_char	build/benos/uart_kern_test_c.s	/^uart_rd_char:$/;"	l
uart_rd_char	src/uart_kern_test.c	/^char uart_rd_char()$/;"	f
uart_send_c	build/benos/uart_kern_test_c.s	/^uart_send_c:$/;"	l
uart_send_c	src/uart_kern_test.c	/^void uart_send_c(char c)$/;"	f
uart_send_char	build/sbi/uart_c.s	/^uart_send_char:$/;"	l
uart_send_char	sbi/uart.c	/^void uart_send_char(char c)$/;"	f
uart_send_str	build/benos/uart_kern_test_c.s	/^uart_send_str:$/;"	l
uart_send_str	src/uart_kern_test.c	/^void uart_send_str(char *s)$/;"	f
uart_send_string	build/sbi/uart_c.s	/^uart_send_string:$/;"	l
uart_send_string	sbi/uart.c	/^void uart_send_string(char *s)$/;"	f
unused	backup/virt_disk.h	/^  unsigned short unused;$/;"	m	struct:virtq_avail
unused	src/virt_disk.h	/^  unsigned short unused;$/;"	m	struct:virtq_avail
used	backup/virt_disk.c	/^  struct virtq_used *used;$/;"	m	struct:disk	typeref:struct:disk::virtq_used	file:
used	src/virt_disk.c	/^  struct virtq_used *used;$/;"	m	struct:disk	typeref:struct:disk::virtq_used	file:
used_idx	backup/virt_disk.c	/^  unsigned short used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
used_idx	src/virt_disk.c	/^  unsigned short used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
user_init	build/benos/proc_c.s	/^user_init:$/;"	l
user_init	src/proc.c	/^void user_init()$/;"	f
user_trap	build/benos/src_trap_c.s	/^user_trap:$/;"	l
user_trap	src/src_trap.c	/^void user_trap()$/;"	f
user_trap_ret	build/benos/src_trap_c.s	/^user_trap_ret:$/;"	l
user_trap_ret	src/src_trap.c	/^void user_trap_ret()$/;"	f
userret	build/benos/trampoline_s.s	/^userret:$/;"	l
userret	src/trampoline.S	/^userret:$/;"	l
uservec	build/benos/trampoline_s.s	/^uservec:$/;"	l
uservec	src/trampoline.S	/^uservec:$/;"	l
uvmalloc	build/benos/vm_c.s	/^uvmalloc:$/;"	l
uvmalloc	src/vm.c	/^unsigned long uvmalloc(pgt_t pagetable, unsigned long oldsz, unsigned newsz, int perm)$/;"	f
va_to_pa	build/benos/vm_c.s	/^va_to_pa:$/;"	l
va_to_pa	src/vm.c	/^unsigned long va_to_pa(pgt_t pagetable, unsigned long va)$/;"	f
vaddr	src/fs.h	/^	unsigned long vaddr;$/;"	m	struct:proghdr
valid	backup/fs.h	/^	int valid;$/;"	m	struct:inode
valid	backup/virt_disk.h	/^	int valid;$/;"	m	struct:buf
valid	src/fs.h	/^	int valid;$/;"	m	struct:inode
valid	src/virt_disk.h	/^	int valid;$/;"	m	struct:buf
version	src/fs.h	/^	unsigned int version;$/;"	m	struct:elfhdr
virt_disk_init	backup/virt_disk.c	/^void virt_disk_init()$/;"	f
virt_disk_init	build/benos/virt_disk_c.s	/^virt_disk_init:$/;"	l
virt_disk_init	src/virt_disk.c	/^void virt_disk_init(void)$/;"	f
virtio_blk_req	backup/virt_disk.h	/^struct virtio_blk_req$/;"	s
virtio_blk_req	src/virt_disk.h	/^struct virtio_blk_req$/;"	s
virtio_disk_rw	backup/virt_disk.c	/^void virtio_disk_rw(struct buf *b, int write)$/;"	f
virtio_disk_rw	build/benos/virt_disk_c.s	/^virtio_disk_rw:$/;"	l
virtio_disk_rw	src/virt_disk.c	/^void virtio_disk_rw(struct buf *b, int write)$/;"	f
virtio_intr	build/benos/virt_disk_c.s	/^virtio_intr:$/;"	l
virtio_intr	src/virt_disk.c	/^void virtio_intr()$/;"	f
virtq_avail	backup/virt_disk.h	/^struct virtq_avail$/;"	s
virtq_avail	src/virt_disk.h	/^struct virtq_avail$/;"	s
virtq_desc	backup/virt_disk.h	/^struct virtq_desc$/;"	s
virtq_desc	src/virt_disk.h	/^struct virtq_desc$/;"	s
virtq_used	backup/virt_disk.h	/^struct virtq_used$/;"	s
virtq_used	src/virt_disk.h	/^struct virtq_used$/;"	s
virtq_used_elem	backup/virt_disk.h	/^struct virtq_used_elem$/;"	s
virtq_used_elem	src/virt_disk.h	/^struct virtq_used_elem$/;"	s
w_medeleg	build/sbi/sbi_main_c.s	/^w_medeleg:$/;"	l
w_medeleg	include/riscv.h	/^static inline void w_medeleg(unsigned long x)$/;"	f
w_mepc	build/sbi/sbi_main_c.s	/^w_mepc:$/;"	l
w_mepc	include/riscv.h	/^static inline void w_mepc(unsigned long x)$/;"	f
w_mideleg	build/sbi/sbi_main_c.s	/^w_mideleg:$/;"	l
w_mideleg	include/riscv.h	/^static inline void w_mideleg(unsigned long x)$/;"	f
w_mie	build/sbi/sbi_trap_c.s	/^w_mie:$/;"	l
w_mie	build/sbi/timer_c.s	/^w_mie:$/;"	l
w_mie	include/riscv.h	/^static inline void w_mie(unsigned long x)$/;"	f
w_mip	include/riscv.h	/^static inline void w_mip(unsigned long x)$/;"	f
w_mstatus	build/sbi/sbi_main_c.s	/^w_mstatus:$/;"	l
w_mstatus	include/riscv.h	/^static inline void w_mstatus(unsigned long x)$/;"	f
w_mtvec	build/sbi/sbi_trap_c.s	/^w_mtvec:$/;"	l
w_mtvec	include/riscv.h	/^static inline void w_mtvec(unsigned long x)$/;"	f
w_pmpaddr0	build/sbi/sbi_main_c.s	/^w_pmpaddr0:$/;"	l
w_pmpaddr0	include/riscv.h	/^static inline void w_pmpaddr0(unsigned long x)$/;"	f
w_pmpcfg0	build/sbi/sbi_main_c.s	/^w_pmpcfg0:$/;"	l
w_pmpcfg0	include/riscv.h	/^static inline void w_pmpcfg0(unsigned long x)$/;"	f
w_satp	build/sbi/sbi_main_c.s	/^w_satp:$/;"	l
w_satp	include/riscv.h	/^static inline void w_satp(unsigned long x)$/;"	f
w_sepc	build/benos/src_trap_c.s	/^w_sepc:$/;"	l
w_sepc	include/riscv.h	/^static inline void w_sepc(unsigned long x)$/;"	f
w_sie	build/benos/src_trap_c.s	/^w_sie:$/;"	l
w_sie	build/sbi/sbi_main_c.s	/^w_sie:$/;"	l
w_sie	include/riscv.h	/^static inline void w_sie(unsigned long x)$/;"	f
w_sip	build/benos/src_trap_c.s	/^w_sip:$/;"	l
w_sip	build/sbi/sbi_trap_c.s	/^w_sip:$/;"	l
w_sip	include/riscv.h	/^static inline void w_sip(unsigned long x)$/;"	f
w_sstatus	build/benos/proc_c.s	/^w_sstatus:$/;"	l
w_sstatus	build/benos/src_trap_c.s	/^w_sstatus:$/;"	l
w_sstatus	include/riscv.h	/^static inline void w_sstatus(unsigned long x)$/;"	f
w_stvec	build/benos/src_trap_c.s	/^w_stvec:$/;"	l
w_stvec	build/sbi/sbi_main_c.s	/^w_stvec:$/;"	l
w_stvec	include/riscv.h	/^static inline void w_stvec(unsigned long x)$/;"	f
wait	build/benos/proc_c.s	/^wait:$/;"	l
wait	src/proc.c	/^int wait()$/;"	f
wakeup	build/benos/proc_c.s	/^wakeup:$/;"	l
wakeup	src/proc.c	/^void wakeup(unsigned long *chan)$/;"	f
walk	build/benos/vm_c.s	/^walk:$/;"	l
walk	src/vm.c	/^pte_t *walk(pgt_t pagetable, unsigned long va, int alloc)$/;"	f
wr	src/pipe.h	/^	int wr;$/;"	m	struct:pipe
wr_inode	mkfs/mkfs.c	/^void wr_inode(unsigned int inum, struct dinode *dinode_buf)$/;"	f
wr_sec	mkfs/mkfs.c	/^void wr_sec(unsigned int n, void *buf)$/;"	f
writable	src/fd.h	/^	char writable;$/;"	m	struct:file
write	user/usys.S	/^write:$/;"	l
write	user/usys.s	/^write:$/;"	l
write_reg	include/riscv.h	5;"	d
write_to_inode	build/benos/fs_c.s	/^write_to_inode:$/;"	l
write_to_inode	src/fs.c	/^int write_to_inode(struct inode *ip, unsigned long src, unsigned long offset, unsigned int len, int to_where)$/;"	f
xint	mkfs/mkfs.c	/^unsigned int xint(unsigned int val)$/;"	f
xshort	mkfs/mkfs.c	/^unsigned short xshort(unsigned short val)$/;"	f
zero_blk	mkfs/mkfs.c	/^char zero_blk[BSIZE];$/;"	v
